//-------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// You can write your custom code in the quick-claim-simple.component.ts file instead.
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
//-------------------------------------------------------------------------
import { Component, ViewChild, OnInit, AfterViewInit, OnDestroy, Injector } from '@angular/core';

import { KsGridComponent } from '@src/app/shared/components/grid/grid.component';
import { KsDataPanelComponent } from '@src/app/shared/components/data-panel/data-panel.component';

import { ActivatedRoute } from '@angular/router';
import { map } from 'rxjs/operators';

import { UtilsService } from '@src/app/core/services/utils.service';
import { DataServiceFactory } from '@src/app/core/data/data-service.factory';
import { KinveyServiceConfig } from '@src/app/core/data/kinvey-service-config';
import { CollectionDataService } from '@src/app/core/data/collection-data.service';
import { CollectionState } from '@src/app/core/data/state/collection-state.interface';
import { Claim } from '@src/app/data/claim.model';
import { getClaimConfig } from '@src/app/data/claim.config';
import { ErrorHandlingService } from '@src/app/core/error-handling.service';

@Component({
    templateUrl: './quick-claim-simple.component.html',
    styleUrls: ['./quick-claim-simple.component.css']
})
export class QuickClaimSimpleViewBaseComponent implements OnInit, AfterViewInit, OnDestroy {
    @ViewChild('grid')
    public $grid: KsGridComponent;
    @ViewChild('dataPanel')
    public $dataPanel: KsDataPanelComponent;

    public $config = {
        title: 'Quick Claim',
        titleKey: 'modules.Claims.views.QuickClaimSimple.title',
        newTitle: 'New',
        newTitleKey: 'modules.Claims.views.QuickClaimSimple.newTitle',
        editTitle: 'Edit',
        editTitleKey: 'modules.Claims.views.QuickClaimSimple.editTitle',
        editMode: 'Edit',
        components: {
            grid: {
                filterable: false,
                groupable: false,
                pageable: true,
                reorderable: false,
                resizable: false,
                sortable: false,
                commandColumnWidth: 220,
                editing: {
                    mode: 'ReadOnly'
                },
                confirmDelete: true,
                events: {
                    onRowSelect: e => {
                        this['onRowSelect'](e);
                    }
                }
            },

            dataPanel: {
                allowEdit: true,
                confirmDelete: true,
                buttonIcons: {
                    back: 'k-icon k-i-undo',
                    cancel: 'k-icon k-i-cancel',
                    create: 'k-icon k-i-add',
                    destroy: 'k-icon k-i-close',
                    edit: 'k-icon k-i-edit',
                    save: 'k-icon k-i-checkmark'
                },
                buttonLabelKeys: {
                    backKey: 'modules.Claims.views.QuickClaimSimple.editMessages.back',
                    cancelKey: 'modules.Claims.views.QuickClaimSimple.editMessages.cancel',
                    createKey: 'modules.Claims.views.QuickClaimSimple.editMessages.create',
                    destroyKey: 'modules.Claims.views.QuickClaimSimple.editMessages.destroy',
                    editKey: 'modules.Claims.views.QuickClaimSimple.editMessages.edit',
                    saveKey: 'modules.Claims.views.QuickClaimSimple.editMessages.save'
                }
            },
            statictext0: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields._id'
            },
            text0: {
                format: ''
            },
            label0: {
                forAttribute: 'ctl1',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields._id'
            },
            ctl1: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl1.placeholder',
                name: '_id',
                value: '',
                title: 'Id',
                debounce: 0
            },
            statictext1: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.manyInjuries'
            },
            text1: {
                format: ''
            },
            label1: {
                forAttribute: 'ctl3',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.manyInjuries'
            },
            ctl3: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl3.placeholder',
                name: 'manyInjuries',
                value: '',
                title: 'ManyInjuries',
                debounce: 0
            },
            statictext2: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.manyVehicles'
            },
            text2: {
                format: ''
            },
            label2: {
                forAttribute: 'ctl5',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.manyVehicles'
            },
            ctl5: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl5.placeholder',
                name: 'manyVehicles',
                value: '',
                title: 'ManyVehicles',
                debounce: 0
            },
            statictext3: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.lossCause'
            },
            text3: {
                format: ''
            },
            label3: {
                forAttribute: 'ctl7',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.lossCause'
            },
            ctl7: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl7.placeholder',
                name: 'lossCause',
                value: '',
                title: 'LossCause',
                debounce: 0
            },
            statictext4: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.statement'
            },
            text4: {
                format: ''
            },
            label4: {
                forAttribute: 'ctl9',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.statement'
            },
            ctl9: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl9.placeholder',
                name: 'statement',
                value: '',
                title: 'Statement',
                debounce: 0
            },
            statictext5: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.lossLocation'
            },
            text5: {
                format: ''
            },
            label5: {
                forAttribute: 'ctl11',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.lossLocation'
            },
            ctl11: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl11.placeholder',
                name: 'lossLocation',
                value: '',
                title: 'LossLocation',
                debounce: 0
            },
            statictext6: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.insured'
            },
            text6: {
                format: ''
            },
            label6: {
                forAttribute: 'ctl13',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.insured'
            },
            ctl13: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl13.placeholder',
                name: 'insured',
                value: '',
                title: 'Insured',
                debounce: 0
            },
            statictext7: {
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.claimant'
            },
            text7: {
                format: ''
            },
            label7: {
                forAttribute: 'ctl15',
                textKey: 'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.fields.claimant'
            },
            ctl15: {
                placeholderKey:
                    'modules.Claims.views.QuickClaimSimple.groups.a5f12eae-9a93-4f2a-824f-0c68c04294f2.components.ctl15.placeholder',
                name: 'claimant',
                value: '',
                title: 'Claimant',
                debounce: 0
            }
        }
    };

    public $showForm = false;

    public $claimsService: CollectionDataService<Claim>;

    public $dataModels: any = {
        claimsModel: {}
    };

    protected $activatedRoute: ActivatedRoute;
    protected $utilsService: UtilsService;
    protected $serviceFactory: DataServiceFactory;
    protected $errorHandlingService: ErrorHandlingService;

    constructor(public injector: Injector) {
        this.$activatedRoute = injector.get(ActivatedRoute);
        this.$utilsService = injector.get(UtilsService);
        this.$serviceFactory = injector.get(DataServiceFactory);
        this.$errorHandlingService = injector.get(ErrorHandlingService);

        const dataConfig = {
            claims: getClaimConfig()
        };

        this.initDataServices(dataConfig);
    }

    public ngOnInit(): void {
        this['onInit']();

        this.createSelection();
    }

    public ngAfterViewInit(): void {
        this['onShow']();
    }

    public ngOnDestroy(): void {
        this['onHide']();
    }

    public onInsert() {
        this.$showForm = true;
    }

    public onSave($event) {
        this.resetFormVisibility(false);
    }

    public onRemove($event) {
        this.resetFormVisibility(true);
    }

    public onCancel($event) {
        this.resetFormVisibility($event.insertInProcess);
    }

    public back(e) {
        this.resetFormVisibility(true);
    }

    protected initDataServices(dataConfig: { [key: string]: KinveyServiceConfig }) {
        this.$claimsService = this.$serviceFactory.collection<Claim>({
            config: dataConfig.claims,
            initialState: {
                skip: 0,
                take: 20
            },
            typeName: Claim.name
        });

        this.$errorHandlingService.subscribe(this.$claimsService.errors);
    }

    protected createSelection() {
        this.$grid.kendoGrid.selectionChange.subscribe(e => {
            if (e.selected) {
                this.$dataModels['claimsModel'] = e.selectedRows[0].dataItem;
            }

            if (this.$config.editMode === 'Edit') {
                this.$dataPanel.onEdit();
            }

            this.$showForm = true;
        });

        this.$grid.kendoGrid.dataStateChange.subscribe(e => {
            this.$grid.selectedKeys = [];
        });
    }

    private resetFormVisibility(hideForm: boolean): void {
        this.$showForm = !hideForm && this.$config.editMode === 'Read-Only to Edit';
    }
}
